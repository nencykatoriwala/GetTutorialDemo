Install github
git config --global username "Nency"
git config --global email "nency@gmail.com"

for initial git
=================
git init

for check git config details
==============================
git config

for check config list
========================================
git config --list

for delete .git
=============================
rm -rf .git

for check git status
=============================
git status

for check git log
==============================
git log

for add working directory to stagging area
===========================================
git add --a 
git add .

for add comment in staging area
===========================================
git commit -m "git comit line"

for download any git zip on internet
==============================================
git clone https://github.com/tensorflow/tensorflow.git

for create any empty file
==============================================
touch error.log

for create gitignore empty file
======================================================
touch .gitignore

for ignore file/folder in git
==========================================
crete .gitignore file & write the ignore file/folder name in .gitignore file
example:
error.log
*.log
/dir/
static/dir

for compare staging area with working area
================================================
git diff

for compare staging area with last commit
================================================
git diff --staged

for modified file Direct commit (but only tracked file[file which is alredy in staging] not untracked file)
==================================================
git commit -a -m "Direct commit"

for delete file in wordking & staging both areas
==================================================
git rm third.txt

for rename file in working & staging both areas
===================================================
git mv first.txt first_renamed.txt

for untacked file in staging area[if you are tracked some file & you want to remove file staging but keep in working area]
================================================
git rm --catched t1.txt

for view all changes in files with commit in details
=========================================================
git log -p
git log -p -3 [for show only 3 commit with details]

for view log with short discription
=====================================================
git log --stat

for view all commit in one line
=======================================================
git log --pretty=oneline
git log --pretty=short [for short discription]
git log --pretty=full  [for full discription]

for view commit with time log (Duration)
======================================================
git log --since=2.days [for display only last 2 days cmmit]
git log --since=2.weeks [for display only last 2 weeks cmmit]
git log --since=2.months [for display only last 2 months cmmit]
git log --pretty=format:"%h -- %an" [where h as abbribate commit code & an as author name]

for change commit
=========================================
git commit --amend
then press i & change the commit & press esc key & type :wq

for unstaged any file
=============================================
git restore --staged first.txt

for remove all changes in file or go back to last commit
===========================================================
git checkout -- first.txt

for move the working area to the last commit
===================================================
git checkout -f

for create, view, and delete connections to other repositories
===============================================================
git remote

for add new remote [origin is a varible to store remote directory]
===============================================================
git remote add origin https://github.com/nencykatoriwala/GetTutorialDemo.git

for show remote pull & push url
======================================================================
git remote -v



*********FOR ACCESS PERMISSION REMOTE****************************
=> go to the github.com->login to your account then account->settings
=> go to the SSH and GPG keys tab in left panel
=> click on new SSH key then type the title like: nency personal computer
=> go to the git bash & paste it
    ssh-keygen -t ed25519 -C "your_email@example.com"
    then press Enter (press enter until comand promt display)
=> now your SSH key generated
=> check your SSH id 
   eval "$(ssh-agent -s)"
=> Add ssH private key to SSH Agent [change id_ed25519 to your id like id_nen]
   ssh-add ~/.ssh/id_ed25519 
=> get your SSH key 
   tail ~/.ssh/id_ed25519.pub



